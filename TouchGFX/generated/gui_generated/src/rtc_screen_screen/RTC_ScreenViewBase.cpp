/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/rtc_screen_screen/RTC_ScreenViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

RTC_ScreenViewBase::RTC_ScreenViewBase() :
    buttonCallback(this, &RTC_ScreenViewBase::buttonCallbackHandler)
{
    __background.setPosition(0, 0, 320, 240);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    background.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_ID));
    background.setPosition(0, 0, 320, 240);
    background.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
    add(background);

    Clock_Icon.setBitmap(touchgfx::Bitmap(BITMAP_ICONDONGHO_ID));
    Clock_Icon.setPosition(12, 12, 60, 60);
    Clock_Icon.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
    add(Clock_Icon);

    RTC_Screen_Text.setXY(86, 23);
    RTC_Screen_Text.setColor(touchgfx::Color::getColorFromRGB(252, 252, 252));
    RTC_Screen_Text.setLinespacing(0);
    RTC_Screen_Text.setTypedText(touchgfx::TypedText(T___SINGLEUSE_LXH9));
    add(RTC_Screen_Text);

    RTC_Data.setPosition(118, 101, 152, 39);
    RTC_Data.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    RTC_Data.setTypedText(touchgfx::TypedText(T___SINGLEUSE_L956));
    RTC_Data.displayLeadingZeroForHourIndicator(true);
    RTC_Data.setDisplayMode(touchgfx::DigitalClock::DISPLAY_24_HOUR);
    RTC_Data.setTime24Hour(10, 10, 0);
    add(RTC_Data);

    Time_Text.setXY(12, 101);
    Time_Text.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    Time_Text.setLinespacing(0);
    Time_Text.setTypedText(touchgfx::TypedText(T___SINGLEUSE_H8HR));
    add(Time_Text);

    RTCtoMain_Button.setXY(178, 196);
    RTCtoMain_Button.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_SMALL_ROUND_ACTIVE_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_SMALL_ROUND_PRESSED_ID));
    RTCtoMain_Button.setLabelText(touchgfx::TypedText(T___SINGLEUSE_T0EE));
    RTCtoMain_Button.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    RTCtoMain_Button.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    RTCtoMain_Button.setAction(buttonCallback);
    add(RTCtoMain_Button);
}

RTC_ScreenViewBase::~RTC_ScreenViewBase()
{

}

void RTC_ScreenViewBase::setupScreen()
{

}

void RTC_ScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &RTCtoMain_Button)
    {
        //RTCtoMain
        //When RTCtoMain_Button clicked change screen to Main
        //Go to Main with screen transition towards West
        application().gotoMainScreenSlideTransitionWest();
    }
}
