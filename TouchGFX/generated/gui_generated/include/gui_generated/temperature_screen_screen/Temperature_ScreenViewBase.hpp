/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef TEMPERATURE_SCREENVIEWBASE_HPP
#define TEMPERATURE_SCREENVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/temperature_screen_screen/Temperature_ScreenPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/ScalableImage.hpp>
#include <touchgfx/widgets/ButtonWithLabel.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/widgets/graph/GraphWrapAndClear.hpp>
#include <touchgfx/widgets/graph/GraphElements.hpp>
#include <touchgfx/widgets/graph/GraphLabels.hpp>
#include <touchgfx/widgets/canvas/PainterRGB565.hpp>

class Temperature_ScreenViewBase : public touchgfx::View<Temperature_ScreenPresenter>
{
public:
    Temperature_ScreenViewBase();
    virtual ~Temperature_ScreenViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::ScalableImage background;
    touchgfx::ButtonWithLabel TemperatureToMain_Button;
    touchgfx::TextArea Temperature_Text;
    touchgfx::ScalableImage TemperatureIcon;
    touchgfx::ScalableImage WhiteBackground;
    touchgfx::GraphWrapAndClear<100> TemperatureGraph;
    touchgfx::GraphElementGridY TemperatureGraphMajorYAxisGrid;
    touchgfx::GraphLabelsX TemperatureGraphMajorXAxisLabel;
    touchgfx::GraphLabelsY TemperatureGraphMajorYAxisLabel;
    touchgfx::GraphElementLine TemperatureGraphLine1;
    touchgfx::PainterRGB565 TemperatureGraphLine1Painter;

private:

    /*
     * Canvas Buffer Size
     */
    static const uint32_t CANVAS_BUFFER_SIZE = 4800;
    uint8_t canvasBuffer[CANVAS_BUFFER_SIZE];

    /*
     * Callback Declarations
     */
    touchgfx::Callback<Temperature_ScreenViewBase, const touchgfx::AbstractButton&> buttonCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);

};

#endif // TEMPERATURE_SCREENVIEWBASE_HPP
