/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef RTC_SCREENVIEWBASE_HPP
#define RTC_SCREENVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/rtc_screen_screen/RTC_ScreenPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/ScalableImage.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/containers/clock/DigitalClock.hpp>
#include <touchgfx/widgets/ButtonWithLabel.hpp>

class RTC_ScreenViewBase : public touchgfx::View<RTC_ScreenPresenter>
{
public:
    RTC_ScreenViewBase();
    virtual ~RTC_ScreenViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::ScalableImage background;
    touchgfx::ScalableImage Clock_Icon;
    touchgfx::TextArea RTC_Screen_Text;
    touchgfx::DigitalClock RTC_Data;
    touchgfx::TextArea Time_Text;
    touchgfx::ButtonWithLabel RTCtoMain_Button;

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<RTC_ScreenViewBase, const touchgfx::AbstractButton&> buttonCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);

};

#endif // RTC_SCREENVIEWBASE_HPP
